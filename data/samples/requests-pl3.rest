// make a sample Pipeline that works
// 1. Recipe with a single Persistent Task for Loans
// 2. Recipe with a single Persistent Task for Loan Lookup
// 3. Recipe that joins the two above, then adds 2 income fields
// Dependencies:
// Loans Recipe
// Lookup Recipe

@baseurl = http://localhost:52771/vnx
# @baseurl = http://3.88.4.11:52773/vnx
@caturl = http://localhost:52771/cat

### 0. PIPELINE creation
POST {{baseurl}}/pipeline HTTP/1.1
Content-Type: application/json

< ./pipes/pl3.json

### Subset the loans data 

### drop columns self_employed, married, gender
POST {{baseurl}}/task HTTP/1.1
Content-Type: application/json

{
  "taskid": "loans-drop-selfemp-married-gender",
  "type": "rs.pipeline.TaskSelectColumns",
}

### 
PUT {{baseurl}}/task/loans-drop-selfemp-married-gender HTTP/1.1
Content-Type: application/json

< ./tasks/pl3-loans-drop-selfemp-married-gender.json

### Run It
GET {{baseurl}}/task/loans-drop-selfemp-married-gender/run HTTP/1.1

### drop rows where loanAmount is null

POST {{baseurl}}/task HTTP/1.1
Content-Type: application/json

{
  "taskid": "loans-drop-rows-loanamount-null",
  "type": "rs.pipeline.TaskFilter",
}

### 
PUT {{baseurl}}/task/loans-drop-rows-loanamount-null HTTP/1.1
Content-Type: application/json

< ./tasks/pl3-loans-drop-rows-loanamount-null.json

### Run It
GET {{baseurl}}/task/loans-drop-rows-loanamount-null/run HTTP/1.1

### drop rows where property_area is not urban

POST {{baseurl}}/task HTTP/1.1
Content-Type: application/json

{
  "taskid": "loans-drop-rows-not-urban",
  "type": "rs.pipeline.TaskFilter",
}

### 
PUT {{baseurl}}/task/loans-drop-rows-not-urban HTTP/1.1
Content-Type: application/json

< ./tasks/pl3-loans-drop-rows-not-urban.json

### Run It
GET {{baseurl}}/task/loans-drop-rows-not-urban/run HTTP/1.1

### Recipe

POST {{baseurl}}/task HTTP/1.1
Content-Type: application/json

{
  "taskid": "loans-subset-recipe",
  "type": "rs.pipeline.TaskRecipe",
}

### 
PUT {{baseurl}}/task/loans-subset-recipe HTTP/1.1
Content-Type: application/json

< ./tasks/pl3-loans-subset-recipe.json

### 
GET {{baseurl}}/task/loans-subset-recipe/run HTTP/1.1


### COMPUTE task
POST {{baseurl}}/task HTTP/1.1
Content-Type: application/json

{
  "taskid": "loans-totalincome",
  "type": "rs.pipeline.TaskFieldCompute",
}

### 
PUT {{baseurl}}/task/loans-totalincome HTTP/1.1
Content-Type: application/json

< ./tasks/pl1-loans-totalincome.json

### JOIN task
POST {{baseurl}}/task HTTP/1.1
Content-Type: application/json

{
  "taskid": "loans-join",
  "type": "rs.pipeline.TaskJoin",
}

### 
PUT {{baseurl}}/task/loans-join HTTP/1.1
Content-Type: application/json

< ./tasks/pl1-loans-join.json

### RUN THE PIPELINE
GET {{baseurl}}/pipeline/pl1/run HTTP/1.1

### CLEANUP REQUESTS...

###
DELETE {{baseurl}}/pipeline/pl1 HTTP/1.1
### 
DELETE {{baseurl}}/task/loans-recipe HTTP/1.1
###
DELETE {{baseurl}}/task/loans HTTP/1.1
###
DELETE {{baseurl}}/task/loanslookup HTTP/1.1
###
DELETE {{baseurl}}/task/loanslookup-recipe HTTP/1.1
###
DELETE {{baseurl}}/task/loans-transform-recipe HTTP/1.1
###
DELETE {{baseurl}}/task/loans-totalincome HTTP/1.1
###
DELETE {{baseurl}}/task/loans-join HTTP/1.1
###
###
###
GET {{{{caturl}}}}/all HTTP/1.1
